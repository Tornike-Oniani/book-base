<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:local="clr-namespace:BookBase.Styles"
                    xmlns:utils="clr-namespace:BookBase.Utils">

    <utils:BoolToVisibilityConverter x:Key="BoolToVisibility" />
    <utils:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverse" />

    <!-- Primary color -->
    <Color x:Key="PrimaryColor">#129f4c</Color>
    <SolidColorBrush x:Key="PrimaryColorBrush" Color="{StaticResource PrimaryColor}" />
    <Color x:Key="BackgroundColor">#f5f6f7</Color>
    <Color x:Key="BackgroundColorDark">#e3e4e5</Color>
    <SolidColorBrush x:Key="BackgroundColorBrush" Color="{DynamicResource BackgroundColor}" />
    <Color x:Key="BackgroundLineColor">#f8f8f8</Color>
    <Color x:Key="BackgroundLineColorDark">#e6e6e6</Color>
    <SolidColorBrush x:Key="BackgroundLineColorBrush" Color="{DynamicResource BackgroundLineColor}" />
    <Color x:Key="BorderColor">LightGray</Color>
    <Color x:Key="BorderColorDark">Gray</Color>
    <SolidColorBrush x:Key="BorderColorBrush" Color="{DynamicResource BorderColor}" />
    <Color x:Key="SecondaryButtonGradientStartColor">#fcfcfc</Color>
    <Color x:Key="SecondaryButtonGradientStartColorDark">#ededed</Color>
    <Color x:Key="SecondaryButtonGradientEndColor">#f4f4f4</Color>
    <Color x:Key="SecondaryButtonGradientEndColorDark">#e8e8e8</Color>

    <Style x:Key="WinAll" TargetType="{x:Type Window}">
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="Header" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Margin" Value="0 0 0 5" />
    </Style>
    <Style x:Key="GenericTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="3 2 3 2" />
        <Setter Property="Margin" Value="0 0 0 5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#cccccc" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Padding="{TemplateBinding Padding}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="2">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="#66afe9" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PrimaryButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="wrapper"
                            BorderBrush="#158242"
                            BorderThickness="1"
                            CornerRadius="2"
                            Padding="10 0 10 3">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="#13aa52" Offset="0.0" />
                                <GradientStop Color="#18974c" Offset="1.0" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <TextBlock Text="{TemplateBinding Content}"
                                   FontSize="18"
                                   Foreground="White"
                                   Typography.Capitals="AllSmallCaps"
                                   VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="wrapper">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#129f4c" Offset="0.0" />
                                        <GradientStop Color="#148241" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="wrapper" Value="#116c36" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="wrapper" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#106934" Offset="0.0" />
                                        <GradientStop Color="#138642" Offset="0.3" />
                                        <GradientStop Color="#129e4c" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SecondaryButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="wrapper"
                            BorderBrush="#dddddd"
                            BorderThickness="1"
                            CornerRadius="2"
                            Padding="10 0 10 3">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#fcfcfc" Offset="0.0" />
                                    <GradientStop Color="#f4f4f4" Offset="1.0" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <TextBlock Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="18"
                                       Typography.Capitals="AllSmallCaps"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="wrapper">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#ffffff" Offset="0.0" />
                                        <GradientStop Color="#efefef" Offset="0.9" />
                                        <GradientStop Color="#dddddd" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="wrapper" Property="BorderBrush"  Value="#cacaca" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="wrapper" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#cccccc" Offset="0.0" />
                                        <GradientStop Color="#f2f2f2" Offset="0.3" />
                                        <GradientStop Color="#fefefe" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IconButtonPrimary" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="wrapper"
                            BorderBrush="#158242"
                            BorderThickness="1"
                            CornerRadius="2"
                            Padding="7 5">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="#13aa52" Offset="0.0" />
                                <GradientStop Color="#18974c" Offset="1.0" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="wrapper">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#129f4c" Offset="0.0" />
                                        <GradientStop Color="#148241" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="wrapper" Value="#116c36" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="wrapper" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#106934" Offset="0.0" />
                                        <GradientStop Color="#138642" Offset="0.3" />
                                        <GradientStop Color="#129e4c" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="wrapper"
                            BorderBrush="#dddddd"
                            BorderThickness="1"
                            CornerRadius="2"
                            Padding="7">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#fcfcfc" Offset="0.0" />
                                    <GradientStop Color="#f4f4f4" Offset="1.0" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="wrapper">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#ffffff" Offset="0.0" />
                                        <GradientStop Color="#efefef" Offset="0.9" />
                                        <GradientStop Color="#dddddd" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="wrapper" Property="BorderBrush"  Value="#cacaca" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="wrapper" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#cccccc" Offset="0.0" />
                                        <GradientStop Color="#f2f2f2" Offset="0.3" />
                                        <GradientStop Color="#fefefe" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LinkText" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#337ab7" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#346086" />
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LabelText" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#494747" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="EditTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="1" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#bfbfbe" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="2">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="#b28b40" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="EditButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="wrapper"
                            BorderBrush="#947935"
                            Background="#fef7e3"
                            BorderThickness="1"
                            CornerRadius="2"
                            Padding="10 0 10 3">
                            <TextBlock Text="{TemplateBinding Content}"
                                       Foreground="#947935"
                                       FontSize="18"
                                       Typography.Capitals="AllSmallCaps"
                                       VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="wrapper" Property="BorderBrush" Value="#c6a578" />
                            <Setter TargetName="wrapper" Property="Background" Value="#fefaee" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FileTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource GenericTextBox}">
        <Setter Property="Padding" Value="8" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontSize" Value="14" />
    </Style>
    <Style x:Key="FileButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="#dddddd"
                            BorderThickness="1"
                            Padding="10 5">
                        <TextBlock Text="{TemplateBinding Content}"
                                   FontWeight="SemiBold"
                                   FontSize="14"
                                   Typography.Capitals="AllSmallCaps"
                                   Foreground="#0d47a1"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TagLabel" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border Background="Gray"
                                CornerRadius="10"
                                VerticalAlignment="Center"
                                Grid.Column="0">
                        <TextBlock Text="{TemplateBinding Content}" 
                                        Foreground="White"
                                        Padding="7 3 7 3"
                                        VerticalAlignment="Center"
                                        Grid.Column="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TaggedTextbox" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="0 5 0 5">
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <!-- Filter tag column -->
                                <ColumnDefinition Width="Auto" />
                                <!-- Textbox column -->
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <!-- Filter tag -->
                            <Label Content="{TemplateBinding Tag}" Style="{StaticResource TagLabel}" Grid.Column="0" />
                            <!-- Textbox -->
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          VerticalAlignment="Center"
                                          Margin="5 0 5 0"
                                          Grid.Column="1" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Navigation" TargetType="{x:Type StackPanel}">
        <Setter Property="Width" Value="120" />
        <Setter Property="Background" Value="#3d4f58" />
    </Style>
    <Style x:Key="Naviagtion__Button" TargetType="{x:Type RadioButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="wrapper"
                                Padding="15 5 15 5">
                        <TextBlock Text="{TemplateBinding Content}"
                                       Foreground="#ffffff" />
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="wrapper" Property="Background" Value="#2a3e4c" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="wrapper" Property="Background" Value="#748690" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="displayModeAlt">
        <Border Background="Transparent">
            <Border.InputBindings>
                <MouseBinding Gesture="LeftDoubleClick" 
                              Command="{Binding DataContext.openFileCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                              CommandParameter="{Binding}" />
            </Border.InputBindings>
            <Grid>
                <StackPanel x:Name="wrapper">
                    <!-- Name -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="name:" FontWeight="Bold" Margin="0 0 10 0" />
                        <TextBlock Text="{Binding name}" />
                    </StackPanel>
                    <!-- Authors -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="authors:" FontWeight="Bold" Margin="0 0 10 0" />
                        <TextBlock Text="{Binding authors}" />
                    </StackPanel>
                    <!-- Year -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="year:" FontWeight="Bold" Margin="0 0 10 0" />
                        <TextBlock Text="{Binding year}" />
                    </StackPanel>
                    <!-- Type -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="type:" FontWeight="Bold" Margin="0 0 10 0" />
                        <TextBlock Text="{Binding type}" />
                    </StackPanel>
                </StackPanel>

                <!-- Buttons -->
                <StackPanel x:Name="buttons"
                                Orientation="Horizontal"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Margin="0 5 0 0"
                                Visibility="Collapsed">
                    <Button Content="{iconPacks:BootstrapIcons Kind=BookmarkCheck}"
                            Style="{StaticResource IconButton}"
                            Margin="0 0 5 0"
                            Command="{Binding DataContext.openBookmarkManagerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                            CommandParameter="{Binding}" />
                    <Button Content="{iconPacks:BootstrapIcons Kind=Pencil}"
                            Style="{StaticResource IconButton}"
                            Margin="0 0 5 0"
                            Command="{Binding DataContext.enterEditModeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                            CommandParameter="{Binding}" />
                    <Button Content="{iconPacks:BootstrapIcons Kind=Trash}"
                            Style="{StaticResource IconButton}"
                            Command="{Binding DataContext.deleteBookCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                            CommandParameter="{Binding}" />
                </StackPanel>
            </Grid>
        </Border>

        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="buttons" Property="Visibility" Value="Visible" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="displayModeBookmark">
        <Border Background="Transparent">
            <Border.InputBindings>
                <MouseBinding Gesture="LeftDoubleClick" 
                              Command="{Binding DataContext.openFileCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                              CommandParameter="{Binding}" />
            </Border.InputBindings>
            <Grid>
                <StackPanel x:Name="wrapper">
                    <!-- Name -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="name:" FontWeight="Bold" Margin="0 0 10 0" />
                        <TextBlock Text="{Binding name}" />
                    </StackPanel>
                    <!-- Authors -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="authors:" FontWeight="Bold" Margin="0 0 10 0" />
                        <TextBlock Text="{Binding authors}" />
                    </StackPanel>
                    <!-- Year -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="year:" FontWeight="Bold" Margin="0 0 10 0" />
                        <TextBlock Text="{Binding year}" />
                    </StackPanel>
                    <!-- Type -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="type:" FontWeight="Bold" Margin="0 0 10 0" />
                        <TextBlock Text="{Binding type}" />
                    </StackPanel>
                </StackPanel>

                <!-- Buttons -->
                <StackPanel x:Name="buttons"
                                Orientation="Horizontal"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Margin="0 10 0 0"
                                Visibility="Collapsed">
                    <Button Content="{iconPacks:BootstrapIcons Kind=Dash}"
                            Style="{StaticResource IconButton}"
                            Margin="0 0 5 0"
                            Command="{Binding DataContext.removeBookCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                            CommandParameter="{Binding}" />
                </StackPanel>
            </Grid>
        </Border>

        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="buttons" Property="Visibility" Value="Visible" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="editMode">
        <StackPanel>
            <!-- Information -->
            <Border Padding="25 10 25 0">
                <StackPanel>
                    <!-- Name -->
                    <StackPanel Orientation="Horizontal"
                            Margin="0 0 0 5">
                        <TextBlock Text="name:" 
                               FontWeight="Bold" 
                               VerticalAlignment="Center"
                               Margin="0 0 3 0" />
                        <TextBox Text="{Binding name}" Style="{StaticResource EditTextBox}" />
                    </StackPanel>
                    <!-- Authors -->
                    <StackPanel Orientation="Horizontal"
                            Margin="0 0 0 5">
                        <TextBlock Text="authors:" 
                               FontWeight="Bold" 
                               VerticalAlignment="Center"
                               Margin="0 0 3 0" />
                        <TextBox Text="{Binding authors}" Style="{StaticResource EditTextBox}" />
                    </StackPanel>
                    <!-- Year -->
                    <StackPanel Orientation="Horizontal"
                            Margin="0 0 0 5">
                        <TextBlock Text="year:" 
                               FontWeight="Bold" 
                               VerticalAlignment="Center"
                               Margin="0 0 3 0" />
                        <TextBox Text="{Binding year}" Style="{StaticResource EditTextBox}" />
                    </StackPanel>
                    <!-- Type -->
                    <StackPanel Orientation="Horizontal"
                            Margin="0 0 0 5">
                        <TextBlock Text="type:" 
                               FontWeight="Bold" 
                               VerticalAlignment="Center"
                               Margin="0 0 3 0" />
                        <ComboBox ItemsSource="{Binding DataContext.bookTypes, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                              SelectedItem="{Binding editType}" />
                    </StackPanel>
                </StackPanel>
            </Border>

            <!-- Buttons -->
            <Border Background="{StaticResource BackgroundLineColorBrush}"
                    Margin="1 20 1 1">
                <StackPanel Orientation="Horizontal" 
                            HorizontalAlignment="Right"
                            Margin="0 10 10 10">
                    <Button Content="Update"
                            IsEnabled="{Binding isValid}"
                            Style="{StaticResource EditButton}"
                            Margin="0 0 5 0"
                            Command="{Binding DataContext.updateBookCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                            CommandParameter="{Binding}" />
                    <Button Content="Cancel" 
                            Style="{StaticResource SecondaryButton}"
                            Command="{Binding DataContext.exitEditModeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                            CommandParameter="{Binding}" />
                </StackPanel>
            </Border>
        </StackPanel>
    </DataTemplate>
    <ControlTemplate x:Key="ItemsViewTemplate" TargetType="{x:Type ListView}">
        <ScrollViewer Background="{StaticResource BackgroundColorBrush}"
                      Padding="10 5 10 5">
            <ItemsPresenter />
        </ScrollViewer>
    </ControlTemplate>
    <ControlTemplate x:Key="ItemViewTemplate" TargetType="{x:Type ListViewItem}">
        <Border x:Name="wrapper"
                Background="#ffffff"
                Padding="25 10 25 10"
                Margin="0 0 0 5">
            <Grid>
                <ContentPresenter x:Name="content" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="wrapper" Property="Background" Value="#e5e6e6" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ItemViewTemplateEdit" TargetType="{x:Type ListViewItem}">
        <Grid Margin="0 0 0 5">
            <Border Background="#ffffff"
                    BorderThickness="1">
                <Border.Effect>
                    <DropShadowEffect Opacity="0.3" 
                                      ShadowDepth="7" 
                                      Direction="270"
                                      BlurRadius="27" />
                </Border.Effect>
            </Border>
            <Border x:Name="wrapper">
                <ContentPresenter x:Name="content" />
            </Border>
        </Grid>
    </ControlTemplate>
    <Style x:Key="BookListViewItem" TargetType="{x:Type ListViewItem}">
        <!-- Data template -->
        <Setter Property="ContentTemplate" Value="{StaticResource displayModeAlt}" />
        <!-- Control template -->
        <Setter Property="Template" Value="{StaticResource ItemViewTemplate}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding editMode}" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource editMode}" />
                <Setter Property="Template" Value="{StaticResource ItemViewTemplateEdit}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BookListView" TargetType="{x:Type ListView}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template" Value="{StaticResource ItemsViewTemplate}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource BookListViewItem}" />
    </Style>
    
    <Style x:Key="BookmarkBookListViewItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="ContentTemplate" Value="{StaticResource displayModeBookmark}" />
        <Setter Property="Template" Value="{StaticResource ItemViewTemplate}" />
    </Style>
    <Style x:Key="BookmarkBookListView" TargetType="{x:Type ListView}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template" Value="{StaticResource ItemsViewTemplate}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource BookmarkBookListViewItem}" />
    </Style>
</ResourceDictionary>